name: Create Release Package

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  create-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Get version from version.php
      id: get_version
      run: |
        # Extract version from version.php
        VERSION=$(grep -o "version = [0-9]*" version.php | grep -o "[0-9]*")
        RELEASE=$(grep -o "release.*=.*'[^']*'" version.php | grep -o "'[^']*'" | tr -d "'")
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "release=$RELEASE" >> $GITHUB_OUTPUT
        echo "tag=v$RELEASE-$VERSION" >> $GITHUB_OUTPUT
        
    - name: Create release directory
      run: |
        mkdir -p release/block_student_path
        
    - name: Copy files to release directory
      run: |
        # Copy all files except .git and .github
        rsync -av --exclude='.git' --exclude='.github' --exclude='release' . release/block_student_path/
        
    - name: Create ZIP package
      run: |
        cd release
        zip -r "block_student_path_${{ steps.get_version.outputs.release }}.zip" block_student_path/
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: block_student_path_${{ steps.get_version.outputs.release }}
        path: release/block_student_path_${{ steps.get_version.outputs.release }}.zip
        
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Student Path Block v${{ steps.get_version.outputs.release }}
        body: |
          ## Student Path Block Release v${{ steps.get_version.outputs.release }}
          
          ### Changes
          - Automatic release generated from commit ${{ github.sha }}
          
          ### Installation
          1. Download the ZIP file
          2. Extract it to your Moodle blocks directory
          3. Visit your Moodle admin page to complete the installation
          
          ### Version Details
          - Plugin version: ${{ steps.get_version.outputs.version }}
          - Release version: ${{ steps.get_version.outputs.release }}
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: release/block_student_path_${{ steps.get_version.outputs.release }}.zip
        asset_name: block_student_path_${{ steps.get_version.outputs.release }}.zip
        asset_content_type: application/zip
